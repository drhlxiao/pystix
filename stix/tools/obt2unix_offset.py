# a script used to generate a list of differencess between OBT and UNIX epochs 
# the list is used by web data browsers and Starlet

from stix.spice import datetime
from datetime import datetime
now=datetime.now()
import pprint
start = 1582150894
span = 2 * 365 * 84000

difference = 0
last_difference = 0
i = start

tdiff=[]
export_directory="spice_export/"
js_filename=export_directory+'stix.datetime.spice.js'
cpp_filename=export_directory+'SPICEData.cc'
chh_filename=export_directory+'SPICEData.h'
T0=0

while i < span + start:
    obt = datetime.unix2scet(i)
    difference = i - obt
    if abs(last_difference - difference) > 0.1:
        if T0==0:
            T0=i
        print(i, datetime.unix2utc(i), difference)
        tdiff.append([i, difference, datetime.unix2utc(i), obt])
        last_difference = difference
    i += 3600

with open(js_filename,'w') as fout:
    fout.write('//generated by obt2unix_difference.py  at {}\n'.format(now.isoformat()))
    fout.write('//#unix, differences, utc\n')
    fout.write('StixDateTime.scet2unix=function(scet){')
    fout.write('var data={')
    fout.write('obt:[{}],'.format( ','.join([str(x[3]) for x in tdiff])))
    fout.write('diff:[{}],'.format( ','.join([str(x[1]) for x in tdiff])))
    fout.write('}; var i; for(i=0;i<data.obt.length;i++){ if(scet<data.obt[i])break;}return data.diff[i]+scet;} \n')

    print('{} has been generated'.format(js_filename))
    print('Please copy this file to web/static/js/')

    fout.close()

with open(chh_filename,'w') as fout:
    fout.write('//generated by obt2unix_difference.py  at {}\n'.format(now.isoformat()))
    fout.write('//#unix, differences\n')
    fout.write('#ifndef _SPICEDATA_H\n')
    fout.write('#define _SPICEDATA_H\n')
    fout.write('double Unix2Obt(double);\n')

    fout.write('#endif \n')
    print('{} has been generated'.format(js_filename))
    print('Please copy this file to web/static/js/')

    fout.close()


with open(cpp_filename,'w') as fout:
    fout.write('//generated by obt2unix_difference.py  on {}\n'.format(now.isoformat()))
    fout.write('#include <cmath>\n')
    fout.write('#include "SPICEData.h"\n')
    fout.write('double UNIX_T0={};\n'.format(T0))
    fout.write('int UNIX_TIME[]={\n')
    fout.write('{}'.format( ',\n'.join([str(x[0]-T0) for x in tdiff])))
    fout.write('};\n')
    fout.write('double UNIX_TO_OBT_DIFF[]={\n')
    fout.write('{}'.format( ',\n'.join([str(x[1]) for x in tdiff])))
    fout.write('};\n')
    fun='''
        double Unix2Obt(double t){
	int num=sizeof(UNIX_TIME)/sizeof(UNIX_TIME[0]);
	int i=0;
	double last_diff=0;
	double this_diff=0;
	for(i=0;i<num;i++)
	{
		if(t<UNIX_TIME[i]+UNIX_T0){
                        this_diff=std::abs(UNIX_TIME[i]+UNIX_T0-t);
			if(last_diff<this_diff)i--;
			break;
		}
                last_diff=std::abs(UNIX_TIME[i]+UNIX_T0-t);
	}
	return t-UNIX_TO_OBT_DIFF[i];
    }
    '''
    fout.write(fun)



    fout.close()
















